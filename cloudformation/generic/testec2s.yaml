#../../bin/create-or-update-cw-stack.bash testec2s.yaml TEST-EC2S NO
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create two free-tier EC2 instances, a key pair, and a security group.
Parameters:
  TestVPCCidr:
    Type: String
    Default: 192.168.1.0/16
    Description: CIDR block for the Test VPC
  PublicSubnetCidr:
    Type: String
    Default: 192.168.1.0/24
    Description: CIDR block for the test public subnet
  PrivateSubnetCidr:
    Type: String
    Default: 192.168.2.0/24
    Description: CIDR block for the test private subnet

Resources:
  # SSH Key Pair
  KCSKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: KCSKEYPAIR
      PublicKeyMaterial: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDXQeWsmLzfgpJgwjG77OtlElm//t5CAlehHlQmReIEZRFe0tFhHBnsZSWEau5hVCKhnN8hKhNWr+Nikk4Q1EeUMwdOAPom833+NRlgZN+yeFcIx2jB2WYwCLLFoxHWk0NWIHE8mTkYlK3BiloCJg0DO9gnayzIfBmkVgDelAUJSiFBessvEeMw0l6V/S5jgVF7AEwTcFYUOicViyQkEkxWyaP8x0VE6UBw/lR5Y0TiG/ST3wj77TwcuPfYW7Exg21a4PW/mEqw6f4kHTAnDGGGzjWIBdfAWz9edpTeiZX5cvIJIALnBqNFkotBKBQrkQnmESzHhI8vzseQA6EB1vVx schidambaram@Sreedhars-MacBook-Pro.local"

  # Security Group Open to SSH
  AllowSSHSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH from anywhere
      VpcId: !Ref TestVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 70.106.201.186/32
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref TestVPCCidr

  # Public VPC for jump host
  TestVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref TestVPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: TestVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TestVPC
      InternetGatewayId: !Ref InternetGateway

  # Public subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TestVPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TestVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Private subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TestVPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TestVPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  # EC2 Instance in public subnet
  PublicEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KCSKeyPair
      SecurityGroupIds:
        - !Ref AllowSSHSG
      SubnetId: !Ref PublicSubnet
      ImageId: !Sub '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64}}'
      Tags:
        - Key: Name
          Value: Public-EC2-PubVPC

  # EC2 Instance in private subnet
  PrivateEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KCSKeyPair
      SecurityGroupIds:
        - !Ref AllowSSHSG
      SubnetId: !Ref PrivateSubnet 
      ImageId: !Sub '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64}}'
      Tags:
        - Key: Name
          Value: Private-EC2-TestVPC

Outputs:
  PublicEC2PublicDNS:
    Description: Public DNS of the public EC2 instance
    Value: !GetAtt PublicEC2.PublicDnsName

  PrivateEC2PrivateDNS:
    Description: Private DNS of the private EC2 instance
    Value: !GetAtt PrivateEC2.PrivateDnsName

  KeyName:
    Description: Name of the created key pair
    Value: !Ref KCSKeyPair
